{"ast":null,"code":"var _jsxFileName = \"/home/demmy/webstack-portfolio_project/file-upload-app/src/pages/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [setError] = useState(null);\n  const [setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [registrationSuccess, setRegistrationSuccess] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const registrationData = {\n      username,\n      email,\n      password\n    };\n\n    //setLoading(true);\n\n    try {\n      const response = await axios.post('http://localhost:5000/register', registrationData);\n      console.log('Registration successful:', response.data);\n      setMessage('Registration successful! Please log in');\n      setRegistrationSuccess(true);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error during registration:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Registration failed');\n    } finally {\n      // setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), registrationSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 27\n    }, this), !registrationSuccess && message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 53\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n\n  /*<div className=\"register-container\">\n    <h2>Register</h2>\n     {error && <div className=\"error-message\">{error}</div>}\n     <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n      </div>\n       <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n      </div>\n       <div className=\"form-group\">\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n      </div>\n       <button type=\"submit\" disabled={loading}>\n        {loading ? 'Registering...' : 'Register'}\n      </button>\n    </form>\n     <div className=\"home-button\">\n      <Link to=\"/\">\n        <button>Go to Homepage</button>\n      </Link>\n    </div>\n  </div>*/\n};\n_s(RegisterPage, \"olf1vUpZAKUT5M+nuzacueA+Fuc=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","Link","axios","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","email","setEmail","password","setPassword","setError","setLoading","message","setMessage","registrationSuccess","setRegistrationSuccess","handleSubmit","e","preventDefault","registrationData","response","post","console","log","data","err","_err$response","_err$response$data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["/home/demmy/webstack-portfolio_project/file-upload-app/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst RegisterPage = () => {\n\n\tconst [username, setUsername] = useState('');\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [setError] = useState(null);\n\tconst [setLoading] = useState(false);\n\tconst [message, setMessage] = useState('');\n\tconst [registrationSuccess, setRegistrationSuccess] = useState(false);\n\n\tconst handleSubmit = async (e) => {\n\t\t    e.preventDefault();\n\n\t\t    const registrationData = {\n\t\t\t          username,\n\t\t\t          email,\n\t\t\t          password,\n\t\t\t        };\n\n\t\t    //setLoading(true);\n\n\t\t    try {\n\t\t\t    const response = await axios.post('http://localhost:5000/register', registrationData);\n\t\t\t    console.log('Registration successful:', response.data);\n\t\t\t    setMessage('Registration successful! Please log in');\n\t\t\t    setRegistrationSuccess(true);\n\n\t\t    } catch (err) {\n\t\t      console.error('Error during registration:', err);\n\t\t      setError(err.response?.data?.message || 'Registration failed');\n\t\t    } finally {\n\t\t     // setLoading(false);\n\t\t    }\n\t\t  };\n\n\t  return (\n\t\t  <div>\n\t\t              <h2>Register</h2>\n\t\t              <form onSubmit={handleSubmit}>\n\t\t                  <input\n\t\t                      type=\"text\"\n\t\t                      placeholder=\"Username\"\n\t\t                      value={username}\n\t\t                      onChange={(e) => setUsername(e.target.value)}\n\t\t                      required\n\t\t                  />\n\t\t                  <input\n\t\t                      type=\"email\"\n\t\t                      placeholder=\"Email\"\n\t\t                      value={email}\n\t\t                      onChange={(e) => setEmail(e.target.value)}\n\t\t                      required\n\t\t                  />\n\t\t                  <input\n\t\t                      type=\"password\"\n\t\t                      placeholder=\"Password\"\n\t\t                      value={password}\n\t\t                      onChange={(e) => setPassword(e.target.value)}\n\t\t                      required\n\t\t                  />\n\t\t                  <button type=\"submit\">Register</button>\n\t\t              </form>\n\n\t\t              {/* Display success message and Login button */}\n\t\t              {registrationSuccess && (\n\t\t\t\t                      <div>\n\t\t\t\t                          <p>{message}</p>\n\t\t\t\t                          <Link to=\"/login\">\n\t\t\t\t                              <button>Login</button>\n\t\t\t\t                          </Link>\n\t\t\t\t                      </div>\n\t\t\t\t                  )}\n\n\t\t              {/* Display any error or generic message */}\n\t\t              {!registrationSuccess && message && <p>{message}</p>}\n\t\t          </div>\n\t\t      );\n\n\n\n\t\t      /*<div className=\"register-container\">\n\t\t        <h2>Register</h2>\n\n\t\t        {error && <div className=\"error-message\">{error}</div>}\n\n\t\t        <form onSubmit={handleSubmit}>\n\t\t          <div className=\"form-group\">\n\t\t            <label htmlFor=\"username\">Username</label>\n\t\t            <input\n\t\t              type=\"text\"\n\t\t              id=\"username\"\n\t\t              value={username}\n\t\t              onChange={(e) => setUsername(e.target.value)}\n\t\t              required\n\t\t            />\n\t\t          </div>\n\n\t\t          <div className=\"form-group\">\n\t\t            <label htmlFor=\"email\">Email</label>\n\t\t            <input\n\t\t              type=\"email\"\n\t\t              id=\"email\"\n\t\t              value={email}\n\t\t              onChange={(e) => setEmail(e.target.value)}\n\t\t              required\n\t\t            />\n\t\t          </div>\n\n\t\t          <div className=\"form-group\">\n\t\t            <label htmlFor=\"password\">Password</label>\n\t\t            <input\n\t\t              type=\"password\"\n\t\t              id=\"password\"\n\t\t              value={password}\n\t\t              onChange={(e) => setPassword(e.target.value)}\n\t\t              required\n\t\t            />\n\t\t          </div>\n\n\t\t          <button type=\"submit\" disabled={loading}>\n\t\t            {loading ? 'Registering...' : 'Register'}\n\t\t          </button>\n\t\t        </form>\n\n\t\t        <div className=\"home-button\">\n\t\t          <Link to=\"/\">\n\t\t            <button>Go to Homepage</button>\n\t\t          </Link>\n\t\t        </div>\n\t\t      </div>*/\n\n};\n\nexport default RegisterPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}